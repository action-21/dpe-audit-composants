---
import { Audit, Common } from "dpe-audit";
import { Comparaison as Table, ComparaisonItem as Row } from "~";
import { Chip } from "../Chip";

interface Props {
    origin: Audit.Audit;
    target: Audit.Audit;
}

const { origin, target } = Astro.props;

const getConsommations = (audit: Audit.Audit, energie: Common.Energie) => {
    const data =
        audit.data?.consommations?.filter((item) => item.energie === energie) ||
        [];
    return data.reduce((acc, item) => acc + item.cef, 0);
};
const getEnergies = (audit: Audit.Audit) => {
    return audit.data?.consommations?.map((item) => item.energie) || [];
};
const energies = [...new Set([...getEnergies(origin), ...getEnergies(target)])];

const data = energies.map((energie) => {
    return {
        energie,
        origin: getConsommations(origin, energie),
        target: getConsommations(target, energie),
    };
});
---

<Table title="Consommations par Ã©nergie">
    {
        data.map((item) => (
            <Row name={Common.energieToString(item.energie)}>
                <Chip
                    slot="origin"
                    class="mx-auto primary"
                    value={item.origin}
                    compare={item.target}
                >
                    {Math.round(item.origin).toLocaleString()}
                </Chip>

                <Chip
                    slot="target"
                    class="mx-auto secondary"
                    value={item.target}
                    compare={item.origin}
                >
                    {Math.round(item.target).toLocaleString()}
                </Chip>
            </Row>
        ))
    }
</Table>
