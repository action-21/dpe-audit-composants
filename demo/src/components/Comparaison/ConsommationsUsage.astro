---
import { Audit, Common } from "dpe-audit";
import { Comparaison as Table, ComparaisonItem as Row } from "~";
import { Chip } from "../Chip";

interface Props {
    origin: Audit.Audit;
    target: Audit.Audit;
}

const { origin, target } = Astro.props;

const getConsommations = (audit: Audit.Audit, usage: Common.Usage) => {
    const data =
        audit.data?.consommations?.filter((item) => item.usage === usage) || [];
    return data.reduce((acc, item) => acc + item.cef, 0);
};
const getUsages = (audit: Audit.Audit) => {
    return audit.data?.consommations?.map((item) => item.usage) || [];
};
const usages = [...new Set([...getUsages(origin), ...getUsages(target)])];

const data = usages.map((usage) => {
    return {
        usage,
        origin: getConsommations(origin, usage),
        target: getConsommations(target, usage),
    };
});
---

<Table title="Consommations par usage">
    {
        data.map((item) => (
            <Row name={Common.usageToString(item.usage)}>
                <Chip
                    slot="origin"
                    class="mx-auto primary"
                    value={item.origin}
                    compare={item.target}
                >
                    {Math.round(item.origin).toLocaleString()}
                </Chip>

                <Chip
                    slot="target"
                    class="mx-auto secondary"
                    value={item.target}
                    compare={item.origin}
                >
                    {Math.round(item.target).toLocaleString()}
                </Chip>
            </Row>
        ))
    }
</Table>
