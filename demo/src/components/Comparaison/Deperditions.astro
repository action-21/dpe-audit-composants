---
import { Audit, Enveloppe } from "dpe-audit";
import { Comparaison as Table, ComparaisonItem as Row } from "~";
import { Chip } from "../Chip";

interface Props {
    origin: Audit.Audit;
    target: Audit.Audit;
}

const { origin, target } = Astro.props;

const getDeperditions = (audit: Audit.Audit, type: Enveloppe.TypeDeperdition) => {
    const data =
        audit.enveloppe.data?.deperditions?.filter((item) => item.type === type) ||
        [];
    return data.reduce((acc, item) => acc + item.deperdition, 0);
};
const getTypes = (audit: Audit.Audit) => {
    return audit.enveloppe.data?.deperditions?.map((item) => item.type) || [];
};
const types = [...new Set([...getTypes(origin), ...getTypes(target)])];

const data = types.map((type) => {
    return {
        type,
        origin: getDeperditions(origin, type),
        target: getDeperditions(target, type),
    };
});
---

<Table title="DÃ©perditions thermiques">
    {
        data.map((item) => (
            <Row name={Enveloppe.typeDeperditionToString(item.type)}>
                <Chip
                    slot="origin"
                    class="mx-auto primary"
                    value={item.origin}
                    compare={item.target}
                >
                    {Math.round(item.origin).toLocaleString()}
                </Chip>

                <Chip
                    slot="target"
                    class="mx-auto secondary"
                    value={item.target}
                    compare={item.origin}
                >
                    {Math.round(item.target).toLocaleString()}
                </Chip>
            </Row>
        ))
    }
</Table>
