---
import { Enveloppe } from "dpe-audit";
import {
    PerformanceMurs,
    PerformancePlanchersBas,
    PerformancePlanchersHauts,
    PerformanceBaies,
    PerformancePortes,
    PerformancePontsThermiques,
} from "~";

import { Card, CardHeader } from "./Card";
import { Caption } from "./Caption";
import { DialogButton } from "./Dialog";

interface Props {
    murs: Array<Enveloppe.IMur>;
    planchers_bas: Array<Enveloppe.IPlancherBas>;
    planchers_hauts: Array<Enveloppe.IPlancherHaut>;
    baies: Array<Enveloppe.IBaie>;
    portes: Array<Enveloppe.IPorte>;
    ponts_thermiques: Array<Enveloppe.IPontThermique>;
}

const {
    murs,
    planchers_bas,
    planchers_hauts,
    baies,
    portes,
    ponts_thermiques,
} = Astro.props;
---

<Card>
    <CardHeader title="Performance de l'enveloppe">
        <DialogButton name="performance-enveloppe" />
    </CardHeader>

    <div class="grid gap-6 grid-cols-1">
        <div
            class="tabs flex flex-nowrap items-center overscroll-none overflow-x-auto text-center"
        >
            <div class="tab grow whitespace-nowrap active" data-name="murs">
                Murs
            </div>
            <div class="tab grow whitespace-nowrap" data-name="planchers_bas">
                Planchers bas
            </div>
            <div class="tab grow whitespace-nowrap" data-name="planchers_hauts">
                Planchers haut
            </div>
            <div class="tab grow whitespace-nowrap" data-name="baies">
                Baies
            </div>
            <div class="tab grow whitespace-nowrap" data-name="portes">
                Portes
            </div>
            <div
                class="tab grow whitespace-nowrap"
                data-name="ponts_thermiques"
            >
                Ponts thermiques
            </div>
        </div>

        <div
            class="tab-window overflow-hidden overflow-x-auto active"
            data-name="murs"
        >
            <PerformanceMurs murs={murs} class="table" />
        </div>
        <div
            class="tab-window overflow-hidden overflow-x-auto"
            data-name="planchers_bas"
        >
            <PerformancePlanchersBas
                planchers_bas={planchers_bas}
                class="table"
            />
        </div>
        <div
            class="tab-window overflow-hidden overflow-x-auto"
            data-name="planchers_hauts"
        >
            <PerformancePlanchersHauts
                planchers_hauts={planchers_hauts}
                class="table"
            />
        </div>
        <div
            class="tab-window overflow-hidden overflow-x-auto"
            data-name="baies"
        >
            <PerformanceBaies baies={baies} class="table" />
        </div>
        <div
            class="tab-window overflow-hidden overflow-x-auto"
            data-name="portes"
        >
            <PerformancePortes portes={portes} class="table" />
        </div>
        <div
            class="tab-window overflow-hidden overflow-x-auto"
            data-name="ponts_thermiques"
        >
            <PerformancePontsThermiques
                ponts_thermiques={ponts_thermiques}
                class="table"
            />
        </div>

        <Caption>
            <ul>
                <li class="mb-2"><b>SDEP :</b> Surface déperditive en m²</li>
                <li class="mb-2">
                    <b>U :</b> Coefficient de transmission thermique en W/m².K
                </li>
                <li><b>DP :</b> Déperditions thermiques en W/K</li>
            </ul>
        </Caption>
    </div>
</Card>

<script>
    const tabs = document.querySelectorAll(".tab") ?? [];
    const windows = document.querySelectorAll(".tab-window") ?? [];

    const handle = (target: string) => {
        [...tabs, ...windows].forEach((element) => {
            const name = element.getAttribute("data-name");
            element.classList.remove("active");

            if (name === target) {
                element.classList.add("active");
            }
        });
    };

    tabs.forEach((item) => {
        item.addEventListener("click", () => {
            const target = item.getAttribute("data-name");

            if (target) {
                handle(target);
            }
        });
    });
</script>

<style>
    .tab-window:not(.active) {
        display: none;
    }
    .tabs {
        border-bottom: solid 1px var(--border);
    }
    .tab {
        padding: 0.8rem;
        font-weight: 600;
        text-transform: uppercase;
        color: var(--text-disabled);
        border-bottom: solid 2px transparent;

        &.active {
            border-color: var(--primary);
            color: var(--color-primary);
        }
    }
    .tab:hover {
        cursor: pointer;
    }
</style>
