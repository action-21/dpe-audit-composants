---
import { Baie } from "../data/Enveloppe";

interface Props {
    className?: string;
    baies: Array<Baie.Baie>;
}

const { baies, className = "" } = Astro.props;

const total = {
    sdep: baies.reduce((acc, item) => acc + item.data.sdep, 0),
    dp: baies.reduce((acc, item) => acc + item.data.dp, 0),
};

const data = baies
    .map((item) => {
        return {
            description: Baie.toString(item),
            sdep: item.data.sdep,
            u: item.data.u,
            performance: item.data.performance,
            dp: item.data.dp,
            part: (item.data.dp / total.dp) * 100,
        };
    })
    .sort((a, b) => (a.dp > b.dp ? -1 : 1));
---

<table class={className}>
    <thead>
        <tr>
            <th class="grow text-left">Description</th>
            <th>U</th>
            <th>SDEP</th>
            <th>DP</th>
            <th>Part</th>
        </tr>
    </thead>

    <tbody>
        {
            data.map((item) => (
                <tr>
                    <td class="grow text-left">
                        {item.description.split("\n").map((line) => (
                            <p>{line}</p>
                        ))}
                    </td>
                    <td class="whitespace-nowrap" data-performance={item.performance}>
                        <span>{item.u.toFixed(2)}</span>
                    </td>
                    <td class="whitespace-nowrap">{item.sdep.toFixed(2)}</td>
                    <td class="whitespace-nowrap">{item.dp.toFixed(2)}</td>
                    <td class="whitespace-nowrap">
                        {item.part.toFixed(2)} %
                    </td>
                </tr>
            ))
        }
    </tbody>

    <tfoot>
        <tr>
            <td class="text-left whitespace-nowrap">Total</td>
            <td>-</td>
            <td class="whitespace-nowrap">{total.sdep.toFixed(2)}</td>
            <td class="whitespace-nowrap">{total.dp.toFixed(2)}</td>
            <td class="whitespace-nowrap">100 %</td>
        </tr>
    </tfoot>
</table>

<style>
    table {
        width: 100%;
        max-width: 100%;
        table-layout: auto;
        border-collapse: collapse;
    }
    td {
        span {
            padding: 0.3rem;
            font-weight: 600;
            color: #ffffff;
        }
        &[data-performance="tres_bonne"] span {
            background-color: #2caf85;
        }
        &[data-performance="bonne"] span {
            background-color: #a5cc74;
        }
        &[data-performance="moyenne"] span {
            background-color: #f49838;
        }
        &[data-performance="insuffisante"] span {
            background-color: #e52322;
        }
    }
    th,
    td {
        text-align: center;

        &:first-child {
            padding-left: 0;
            padding-right: 0;
        }
        p:not(:last-child) {
            margin-bottom: 0.5rem;
        }
    }
    .text-left {
        text-align: left;
    }
    .grow {
        width: 100%;
    }
</style>
