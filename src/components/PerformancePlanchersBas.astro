---
import { Enveloppe } from "dpe-audit";
import NiveauPerformanceElement from "./NiveauPerformanceElement.astro";

interface Props {
    class?: string;
    planchers_bas: Array<Enveloppe.PlancherBasWithData>;
}

const { planchers_bas, class: className = "" } = Astro.props;

const total = {
    sdep: planchers_bas.reduce((acc, item) => acc + item.data.sdep, 0),
    dp: planchers_bas.reduce((acc, item) => acc + item.data.dp, 0),
};

const data = planchers_bas
    .map((item) => {
        let description: string = item.description;

        if (item.type_structure) {
            description += `\n${Enveloppe.PlancherBas.typeStructureToString(item.type_structure)}`;
        }

        description += `\n${Enveloppe.isolationToString(item.isolation)}`;

        return {
            description: description,
            part: (item.data.dp / total.dp) * 100,
            isolation: item.isolation,
            sdep: item.data.sdep,
            dp: item.data.dp,
            u: item.data.u,
            performance: item.data.performance,
        };
    })
    .sort((a, b) => (a.dp > b.dp ? -1 : 1));
---

<table class={className}>
    <thead>
        <tr>
            <th>Description</th>
            <th>U</th>
            <th>SDEP</th>
            <th>DP</th>
            <th>Part</th>
        </tr>
    </thead>

    <tbody>
        {
            data.map((item) => (
                <tr>
                    <td>
                        {item.description.split("\n").map((line) => (
                            <p>{line}</p>
                        ))}
                    </td>
                    <td>
                        <NiveauPerformanceElement
                            performance={item.performance}
                            texte={item.u.toFixed(2)}
                        />
                    </td>
                    <td>{item.sdep.toFixed(2)}</td>
                    <td>{item.dp.toFixed(2)}</td>
                    <td>{item.part.toFixed(2)} %</td>
                </tr>
            ))
        }
    </tbody>

    <tfoot>
        <tr>
            <td>Total</td>
            <td>-</td>
            <td>{total.sdep.toFixed(2)}</td>
            <td>{total.dp.toFixed(2)}</td>
            <td>100 %</td>
        </tr>
    </tfoot>
</table>

<style>
    th,
    td {
        text-align: center;
        white-space: nowrap;

        &:first-child {
            width: 100%;
            text-align: left;
            padding-left: 0;
            padding-right: 0;
        }
    }

    tbody td:last-child {
        font-weight: 600;
    }
</style>
